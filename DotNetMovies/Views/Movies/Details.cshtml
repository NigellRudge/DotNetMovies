@model DetailViewModel
@{
    ViewData["Title"] = "Details";
    var crewCount = 5;
    var castCount = 10;
}

<div class="movie-info border-b border-gray-800">
    <div class="container mx-auto px-4 py-16 flex flex-col md:flex-row">
        <div class="flex-none">
            <img src="@Model.movie.getPosterPath()" alt="poster" class="w-64 lg:w-96">
        </div>
        <div class="md:ml-24">
            <h2 class="text-4xl mt-4 md:mt-0 font-semibold">@Model.movie.title</h2>
            <div class="flex flex-wrap items-center text-gray-400 text-sm">
                <svg class="fill-current text-orange-500 w-4" viewBox="0 0 24 24"><g data-name="Layer 2"><path d="M17.56 21a1 1 0 01-.46-.11L12 18.22l-5.1 2.67a1 1 0 01-1.45-1.06l1-5.63-4.12-4a1 1 0 01-.25-1 1 1 0 01.81-.68l5.7-.83 2.51-5.13a1 1 0 011.8 0l2.54 5.12 5.7.83a1 1 0 01.81.68 1 1 0 01-.25 1l-4.12 4 1 5.63a1 1 0 01-.4 1 1 1 0 01-.62.18z" data-name="star" /></g></svg>
                <span class="ml-1">@Model.movie.vote_average</span>
                <span class="mx-2">|</span>
                <span>@Model.movie.release_date</span>
                <span class="mx-2">|</span>
                @foreach (var genre in Model.movie.genres)
                {
                    if (genre == Model.movie.genres.Last())
                    {
                        <span class="ml-1">@genre.name </span>
                    }
                    else
                    {
                        <span class="ml-1">@genre.name,</span>
                    }

                }

            </div>

            <p class="text-gray-300 mt-8">
                @Model.movie.overview
            </p>

            <div class="mt-12">
                <h4 class="text-white font-semibold">Featured Crew</h4>
                <div class="flex mt-4">
                    @foreach (var crew in Model.movie.credits.crew.ToList().GetRange(0, crewCount))
                    {
                        <div class="mr-8">
                            <div>@crew.name</div>
                            <div class="text-sm text-gray-400">@crew.job</div>
                        </div>
                    }
                </div>
            </div>

            @if (Model.trailer != null)
            {
                <div>
                    <div class="mt-12">
                        <a href="@Model.trailer.GetVideoUrl()"
                           class="flex inline-flex items-center bg-orange-500 text-gray-900 rounded font-semibold px-5 py-4 hover:bg-orange-600 transition ease-in-out duration-150">
                            <svg class="w-6 fill-current" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none" /><path d="M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" /></svg>
                            <span class="ml-2">Play Trailer</span>
                        </a>
                    </div>
                </div>
            }
            else
            {
                <div>
                    <div class="mt-12">
                        <a href="#"
                           class="flex inline-flex items-center bg-orange-500 text-gray-900 rounded font-semibold px-5 py-4 hover:bg-orange-600 transition ease-in-out duration-150">
                            <svg class="w-6 fill-current" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none" /><path d="M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" /></svg>
                            <span class="ml-2">Play Trailer</span>
                        </a>
                    </div>
                </div>
            }

        </div>
    </div>
</div> <!-- end movie-info -->

<div class="movie-cast border-b border-gray-800">
    <div class="container mx-auto px-4 py-16">
        <h2 class="text-4xl font-semibold">Cast</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-8">
            @foreach (var cast in Model.movie.credits.cast.ToList().GetRange(0,castCount))
            {
                <partial name="_MovieCastCard" model="@cast" />
            }
        </div>
    </div>
</div> <!-- end movie-cast -->

<div class="movie-images" x-data="{ isOpen: false, image: ''}">
    <div class="container mx-auto px-4 py-16">
        <h2 class="text-4xl font-semibold">Images</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8" id="galleryGrid">
            @foreach (var image in Model.movie.images.backdrops)
            {
                <div class="mt-8" id="galleryImage">
                    <img src="@image.GetFilePath()" alt="image1" class="hover:opacity-75 transition ease-in-out duration-150">
                </div>
            }
        </div>

    </div>
</div> <!-- end movie-images -->
@section Scripts {
    <script src="magnific-popup/jquery.magnific-popup.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#galleryImage').magnificPopup({
                type: 'image',
                delegate:'img',
                closeOnContentClick: true,
                mainClass: 'mfp-img-mobile',
                image: {
                    verticalFit: true
                }

            });
        });
    </script>

}

@section CustomCSS {
    <link rel="stylesheet" href="magnific-popup/magnific-popup.css">
    
    <style>
        /* padding-bottom and top for image */
        .mfp-no-margins img.mfp-img {
            padding: 0;
        }
        /* position of shadow behind the image */
        .mfp-no-margins .mfp-figure:after {
            top: 0;
            bottom: 0;
        }
        /* padding for main container */
        .mfp-no-margins .mfp-container {
            padding: 0;
        }


        /* 

            for zoom animation 
            uncomment this part if you haven't added this code anywhere else

            */
                    /*

            .mfp-with-zoom .mfp-container,
            .mfp-with-zoom.mfp-bg {
	            opacity: 0;
	            -webkit-backface-visibility: hidden;
	            -webkit-transition: all 0.3s ease-out; 
	            -moz-transition: all 0.3s ease-out; 
	            -o-transition: all 0.3s ease-out; 
	            transition: all 0.3s ease-out;
            }

            .mfp-with-zoom.mfp-ready .mfp-container {
		            opacity: 1;
            }
            .mfp-with-zoom.mfp-ready.mfp-bg {
		            opacity: 0.8;
            }

            .mfp-with-zoom.mfp-removing .mfp-container, 
            .mfp-with-zoom.mfp-removing.mfp-bg {
	            opacity: 0;
            }
            */
    </style>
}